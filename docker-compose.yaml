version: '3.8'

networks:
    dev:

services:
    #nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - 8000:80
        volumes:
            - ./:/var/www/project
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php7.4-service
            - mariadb-service
        networks:
            - dev
        links: 
            - php7.4-service

    # php7.4
    php7.4-service:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php7.4-container
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www/project
            - ./docker/php/php.ini:/etc/php/7.4/nginx/php.ini
        environment: 
            APP_ENV: dev
            MAILER_DSN: smtp://mail:1025?encryption=null&auth_mode=null
            MERCURE_PUBLISH_URL: http://mercure/.well-known/mercure
            REDIS_URL: $REDIS_URL
            MESSENGER_TRANSPORT_DSN: $MESSENGER_TRANSPORT_DSN
            MESSENGER_TRANSPORT_FAILED_DSN: $MESSENGER_FAILED_TRANSPORT_DSN
            MERCURE_SUBSCRIBER_KEY: $SUBSCRIBER_KEY
        networks:
            - dev

    #mariadb
    mariadb-service:
        image: mariadb
        restart: always
        container_name: mariadb-container
        ports:
            - "3306:3306"
        environment:
            MYSQL_PASSWORD: 'root'
            MYSQL_ROOT_PASSWORD: 'root'
            MYSQL_ALLOW_EMPTY_PASSWORD: null
        volumes: 
            - /var/lib/mysql:/var/lib/mysql
        networks:
            - dev

    # adminer
    adminer-service:
        image: adminer
        restart: always
        container_name: adminer-container
        ports:
            - '5050:8080'
        depends_on:
            - mariadb-service
        networks:
            - dev

    # node
    node-service:
        build:
            context: ./docker/node
        container_name: node-container
        working_dir: /var/www/project
        command: yarn watch
        volumes:
          - .:/var/www/project
        networks:
            - dev

    # redis
    redis:
        restart: unless-stopped
        build: ./docker/redis
        container_name: redis-container
        ports:
            - 6379:6379
        volumes: 
            - /docker/redis:/data
        networks:
            - dev

    # Blackfire
    blackfire:
        image: blackfire/blackfire
        container_name: blackfire-container
        ports: ["8707"]
        environment:
            # Exposes BLACKFIRE_* environment variables from the host
            BLACKFIRE_SERVER_ID: $BLACKFIRE_SERVER_ID
            BLACKFIRE_SERVER_TOKEN: $BLACKFIRE_SERVER_TOKEN
            BLACKFIRE_CLIENT_ID: $BLACKFIRE_CLIENT_ID
            BLACKFIRE_CLIENT_TOKEN: $BLACKFIRE_CLIENT_TOKEN
        networks:
            - dev

    #Messenger Worker
    messenger:
        build: 
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: messenger-container
        volumes:
            - ./:/var/www/project
        depends_on:
            - mariadb-service
        restart: unless-stopped
        command: ['symfony', 'console', 'messenger:consume', 'async', '--limit=10', '-vvv']
        environment:
            MAILER_DSN: smtp://mail:1025?encryption=null&auth_mode=null
            REDIS_URL: $REDIS_URL
            MESSENGER_TRANSPORT_DSN: $MESSENGER_TRANSPORT_DSN
            MESSENGER_TRANSPORT_FAILED_DSN: $MESSENGER_FAILED_TRANSPORT_DSN
            MERCURE_PUBLISH_URL: http://mercure/.well-known/mercure
        networks:
            - dev

    # Mercure
    mercure:
        restart: unless-stopped
        image: dunglas/mercure:v0.10.4
        container_name: mercure-container
        environment:
          CORS_ALLOWED_ORIGINS: 'http://localhost:8000'
          MERCURE_PUBLISHER_JWT_KEY: $MERCURE_SECRET
          MERCURE_SUBSCRIBER_JWT_KEY: $SUBSCRIBER_KEY
          JWT_KEY: $MERCURE_SECRET
          ALLOW_ANONYMOUS: 1
          DEBUG: debug
        ports:
          - 3000:80
        networks:
            - dev

    #Mailhog
    mail:
        image: mailhog/mailhog
        container_name: mail-container
        restart: always
        ports:
            - 8025:8025 # web ui
            - 1025:1025 # smtp server
        networks:
            - dev
        